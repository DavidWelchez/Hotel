<body>
    <div class="container">
        <h1>Inscripciones virtuales</h1>
        <hr>
        {{#if buscar }}
        <div class=" col-md-12">
            <div class="row g-3 needs-validation">
                <div class="col-md-3">
                    <a class="btn btn-success btn2 " href="/inscripcion/inscripcionesAdminvirtual" title="Refrescar"><i
                            class="fas fa-arrow-circle-left"> Refrescar</i></a>
                </div>
             
                <div class=" col-md-8">
                    <form action="/inscripcion/inscripcionesAdminvirtual/buscar" method="POST">
                        <input type="text" class="form-control" placeholder="Buscar por nombre o correo" aria-label="Recipient's username"
                            aria-describedby="button-addon2" name="buscar">
                </div>
                <div class="col-md-1">
                    <button class="btn btn-success" type="submit" id="button-addon2">Buscar</button>
                </div>
                </form>
            </div>
        </div>
        {{else}}
        <div class=" col-md-12">
            <div class="row g-3 needs-validation">
              
                <div class=" col-md-11">
                    <form action="/inscripcion/inscripcionesAdminvirtual/buscar" method="POST">
                        <input type="text" class="form-control" placeholder="Buscar por nombre o correo" aria-label="Recipient's username"
                            aria-describedby="button-addon2" name="buscar">
                </div>
                <div class="col-md-1">
                    <button class="btn btn-success" type="submit" id="button-addon2">Buscar</button>
                </div>
                </form>
            </div>
        </div>

        {{/if}}
        <br>
        <div class="form-group" hidden>
            <!--		Show Numbers Of Rows 		-->
            <select class="form-control" name="state" id="maxRows">
                <option value="5000">Show ALL Rows</option>
                <option value="20">20</option>
                <option value="30">30</option>
                <option value="40">40</option>
                <option value="50">50</option>
                <option value="60">60</option>
                <option value="70">70</option>
                <option value="80">80</option>
            </select>
        </div>
        <div class="table-responsive">
            <table
                class="table table-Secondary table-striped table-hover table-hovertable-striped table-class  table-bordered border-light  "
                id="table-id">
                <thead class="table-dark">
                    <tr>
                        <th>Nombre</th>
                        <th>Correo</th>
                        <th>Fecha de inscripción</th>
                        <th>Modalidad</th>
                        <th>Cuotas de Pago</th>
                        <th>Total</th>
                        <th >Usuario validado </th>
                        <th></th>
                        
                    </tr>
                </thead>
                <tbody>
                    {{#each inscripciones }}
                    <tr>
                        <td>{{nombres}} {{apellidos}}</td>
                        <td>{{usuario}}</td>
                        <td>{{created_at}}</td>
                        <td>{{modalidad}}</td>
                        <td>{{cuotasPago}}</td>
                        <td>{{total}}</td>
                        <td  >{{confirmacionEntrada}}</td>
                        





                          <td class="table-active">
                    <a href="/inscripcion/ver/virtual/{{usuario}}"><i class="fas fa-check-square" title="ver"
                            style="color: #0A1251;  " aria-hidden="true"></i> </a>
                </td>
                    </tr>
                    {{else}}
                    <th></th>
                    <th>Aún no se han agregado datos.</th>
                    <th></th>
                    <th></th>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
        <!--		Start Pagination -->
        <div class='pagination-container'>
            <nav>
                <ul class="pagination">

                    <li data-page="prev">
                        <span> &laquo <span class="sr-only">(current)</span></span>
                    </li>
                    <!--	Here the JS Function Will Add the Rows -->
                    <li data-page="next" id="prev">
                        <span> &raquo <span class="sr-only">(current)</span></span>
                    </li>
                </ul>
            </nav>
        </div>
    </div> <!-- 		End of Container -->
    <!--  Developed By Yasser Mas -->
    <!-- partial -->
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js'></script>
    <script src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js'></script>
    <script src="./script.js"></script>
    <script>
        getPagination('#table-id');
        //getPagination('.table-class');
        //getPagination('table');

        /*					PAGINATION 
        - on change max rows select options fade out all rows gt option value mx = 5
        - append pagination list as per numbers of rows / max rows option (20row/5= 4pages )
        - each pagination li on click -> fade out all tr gt max rows * li num and (5*pagenum 2 = 10 rows)
        - fade out all tr lt max rows * li num - max rows ((5*pagenum 2 = 10) - 5)
        - fade in all tr between (maxRows*PageNum) and (maxRows*pageNum)- MaxRows 
        */
        function getPagination(table) {
            var lastPage = 1;
            $('#maxRows')
                .on('change', function (evt) {
                    //$('.paginationprev').html('');						// reset pagination

                    lastPage = 1;
                    $('.pagination')
                        .find('li')
                        .slice(1, -1)
                        .remove();
                    var trnum = 0; // reset tr counter
                    var maxRows = parseInt($(this).val()); // get Max Rows from select option

                    if (maxRows == 5000) {
                        $('.pagination').hide();
                    } else {
                        $('.pagination').show();
                    }
                    var totalRows = $(table + ' tbody tr').length; // numbers of rows
                    $(table + ' tr:gt(0)').each(function () {
                        // each TR in  table and not the header
                        trnum++; // Start Counter
                        if (trnum > maxRows) {
                            // if tr number gt maxRows

                            $(this).hide(); // fade it out
                        }
                        if (trnum <= maxRows) {
                            $(this).show();
                        } // else fade in Important in case if it ..
                    }); //  was fade out to fade it in
                    if (totalRows > maxRows) {
                        // if tr total rows gt max rows option
                        var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
                        //	numbers of pages
                        for (var i = 1; i <= pagenum;) {
                            // for each page append pagination li
                            $('.pagination #prev')
                                .before(
                                    '<li data-page="' +
                                    i +
                                    '">\
								  <span>' +
                                    i++ +
                                    '<span class="sr-only">(current)</span></span>\
								</li>'
                                )
                                .show();
                        } // end for i
                    } // end if row count > max rows
                    $('.pagination [data-page="1"]').addClass('active'); // add active class to the first li
                    $('.pagination li').on('click', function (evt) {
                        // on click each page
                        evt.stopImmediatePropagation();
                        evt.preventDefault();
                        var pageNum = $(this).attr('data-page'); // get it's number

                        var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

                        if (pageNum == 'prev') {
                            if (lastPage == 1) {
                                return;
                            }
                            pageNum = --lastPage;
                        }
                        if (pageNum == 'next') {
                            if (lastPage == $('.pagination li').length - 2) {
                                return;
                            }
                            pageNum = ++lastPage;
                        }
                        lastPage = pageNum;
                        var trIndex = 0; // reset tr counter
                        $('.pagination li').removeClass('active'); // remove active class from all li
                        $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                        // $(this).addClass('active');					// add active class to the clicked
                        limitPagging();
                        $(table + ' tr:gt(0)').each(function () {
                            // each tr in table not the header
                            trIndex++; // tr index counter
                            // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                            if (
                                trIndex > maxRows * pageNum ||
                                trIndex <= maxRows * pageNum - maxRows
                            ) {
                                $(this).hide();
                            } else {
                                $(this).show();
                            } //else fade in
                        }); // end of for each tr in table
                    }); // end of on click pagination list
                    limitPagging();
                })
                .val(5)
                .change();
            // end of on select change
            // END OF PAGINATION
        }
        function limitPagging() {
            // alert($('.pagination li').length)

            if ($('.pagination li').length > 20) {
                if ($('.pagination li.active').attr('data-page') <= 3) {
                    $('.pagination li:gt(20)').hide();
                    $('.pagination li:lt(20)').show();
                    $('.pagination [data-page="next"]').show();
                } if ($('.pagination li.active').attr('data-page') > 3) {
                    $('.pagination li:gt(0)').hide();
                    $('.pagination [data-page="next"]').show();
                    for (let i = (parseInt($('.pagination li.active').attr('data-page')) - 2); i <= (parseInt($('.pagination li.active').attr('data-page')) + 2); i++) {
                        $('.pagination [data-page="' + i + '"]').show();

                    }

                }
            }
        }
        $(function () {
            // Just to append id number for each row
            $('table tr:eq(0)').prepend('<th> ID </th>');

            var id = 0;

            $('table tr:gt(0)').each(function () {
                id++;
                $(this).prepend('<td>' + id + '</td>');
            });
        });

    </script>