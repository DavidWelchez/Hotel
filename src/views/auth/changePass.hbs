{{!--

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Inicio de sesión</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href='https://fonts.googleapis.com/css?family=Roboto:300,400,600' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" href="./style.css">
  <link rel="stylesheet" href="/css/stylelogin.css">
</head>

<!-- partial:index.partial.html -->
<div id="back">
  <canvas id="canvas" class="canvas-back"></canvas>
  <div class="backRight">
  </div>
  <div class="backLeft">
  </div>
</div>

<div id="slideBox">
  <div class="topLayer">

    <body>
      <div class="right">

        <div class="content">
          {{>message}}
          <h2>Inicio de sesión</h2>
          <form action="/signin" id="form-login" method="post">
            <div class="form-element form-stack">
              <label for="username-login" class="form-label">Nombre de usuario</label>
              <input id="username-login" type="text" name="username">
            </div>
            <div class="form-element form-stack">
              <label for="password-login" class="form-label">Contraseña</label>
              <input id="password-login" type="password" name="password">
            </div>
            <div class="form-element form-submit">
              <button id="logIn" class="login" type="submit" name="login">Iniciar Sesión</button>

            </div>
          </form>
        </div>
      </div>
    </body>
  </div>
</div>

<!--

Remixed from "Sliding Login Form" Codepen by
C-Rodg (github.com/C-Rodg)
https://codepen.io/crodg/pen/yNKxej

Remixed from "Paper.js - Animated Shapes Header" Codepen by
Connor Hubeny (@cooper_hu)
https://codepen.io/cooper_hu/pen/ybxoev

Custom Checkbox based on the blog post by
Mik Ted (@inserthtml):
https://www.inserthtml.com/2012/06/custom-form-radio-checkbox/

HTML5 Form Validation based on the blog post by
Thoriq Firdaus (@tfirdaus):
https://webdesign.tutsplus.com/tutorials/
html5-form-validation-with-the-pattern-attribute--cms-25145

-->
<!-- partial -->
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.11.3/paper-full.min.js'></script>
<script src="./script.js"></script>

</body>

</html>

<script>
  /* ====================== *
   *  Toggle Between        *
   *  Sign Up / Login       *
   * ====================== */
  $(document).ready(function () {
    $('#goRight').on('click', function () {
      $('#slideBox').animate({
        'marginLeft': '0'
      });
      $('.topLayer').animate({
        'marginLeft': '100%'
      });
    });
    $('#goLeft').on('click', function () {
      if (window.innerWidth > 769) {
        $('#slideBox').animate({
          'marginLeft': '50%'
        });
      }
      else {
        $('#slideBox').animate({
          'marginLeft': '20%'
        });
      }
      $('.topLayer').animate({
        'marginLeft': '0'
      });
    });
  });

  /* ====================== *
   *  Initiate Canvas       *
   * ====================== */
  paper.install(window);
  paper.setup(document.getElementById("canvas"));

  // Paper JS Variables
  var canvasWidth,
    canvasHeight,
    canvasMiddleX,
    canvasMiddleY;

  var shapeGroup = new Group();

  var positionArray = [];

  function getCanvasBounds() {
    // Get current canvas size
    canvasWidth = view.size.width;
    canvasHeight = view.size.height;
    canvasMiddleX = canvasWidth / 2;
    canvasMiddleY = canvasHeight / 2;
    // Set path position
    var position1 = {
      x: (canvasMiddleX / 2) + 100,
      y: 100,
    };

    var position2 = {
      x: 200,
      y: canvasMiddleY,
    };

    var position3 = {
      x: (canvasMiddleX - 50) + (canvasMiddleX / 2),
      y: 150,
    };

    var position4 = {
      x: 0,
      y: canvasMiddleY + 100,
    };

    var position5 = {
      x: canvasWidth - 130,
      y: canvasHeight - 75,
    };

    var position6 = {
      x: canvasMiddleX + 80,
      y: canvasHeight - 50,
    };

    var position7 = {
      x: canvasWidth + 60,
      y: canvasMiddleY - 50,
    };

    var position8 = {
      x: canvasMiddleX + 100,
      y: canvasMiddleY + 100,
    };

    positionArray = [position3, position2, position5, position4, position1, position6, position7, position8];
  };


  /* ====================== *
   * Create Shapes          *
   * ====================== */
  function initializeShapes() {
    // Get Canvas Bounds
    getCanvasBounds();

    var shapePathData = [
      'M231,352l445-156L600,0L452,54L331,3L0,48L231,352',
      'M0,0l64,219L29,343l535,30L478,37l-133,4L0,0z',
      'M0,65l16,138l96,107l270-2L470,0L337,4L0,65z',
      'M333,0L0,94l64,219L29,437l570-151l-196-42L333,0',
      'M331.9,3.6l-331,45l231,304l445-156l-76-196l-148,54L331.9,3.6z',
      'M389,352l92-113l195-43l0,0l0,0L445,48l-80,1L122.7,0L0,275.2L162,297L389,352',
      'M 50 100 L 300 150 L 550 50 L 750 300 L 500 250 L 300 450 L 50 100',
      'M 700 350 L 500 350 L 700 500 L 400 400 L 200 450 L 250 350 L 100 300 L 150 50 L 350 100 L 250 150 L 450 150 L 400 50 L 550 150 L 350 250 L 650 150 L 650 50 L 700 150 L 600 250 L 750 250 L 650 300 L 700 350 '
    ];

    for (var i = 0; i <= shapePathData.length; i++) {
      // Create shape
      var headerShape = new Path({
        strokeColor: 'rgba(255, 255, 255, 0.5)',
        strokeWidth: 2,
        parent: shapeGroup,
      });
      // Set path data
      headerShape.pathData = shapePathData[i];
      headerShape.scale(2);
      // Set path position
      headerShape.position = positionArray[i];
    }
  };

  initializeShapes();

  /* ====================== *
   * Animation              *
   * ====================== */
  view.onFrame = function paperOnFrame(event) {
    if (event.count % 4 === 0) {
      // Slows down frame rate
      for (var i = 0; i < shapeGroup.children.length; i++) {
        if (i % 2 === 0) {
          shapeGroup.children[i].rotate(-0.1);
        } else {
          shapeGroup.children[i].rotate(0.1);
        }
      }
    }
  };

  view.onResize = function paperOnResize() {
    getCanvasBounds();

    for (var i = 0; i < shapeGroup.children.length; i++) {
      shapeGroup.children[i].position = positionArray[i];
    }

    if (canvasWidth < 700) {
      shapeGroup.children[3].opacity = 0;
      shapeGroup.children[2].opacity = 0;
      shapeGroup.children[5].opacity = 0;
    } else {
      shapeGroup.children[3].opacity = 1;
      shapeGroup.children[2].opacity = 1;
      shapeGroup.children[5].opacity = 1;
    }
  };
</script> --}}



<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'>
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/typicons/2.0.9/typicons.min.css'>
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css'>
  <link rel="stylesheet" href="./style.css">
  <link rel="stylesheet" href="/css/stylelogin.css">
</head>

<body>
 
  <!-- partial:index.partial.html -->

  {{!-- <body id=""></body> --}}
  <div id="particles-js"></div>
  <div class="">
    <div class="container">
      <span class="error animated tada" id="msg"></span>
      <form action="/seguridad/change-password" name="form1" class="box" method="post">
        <br>
        <br>
        <img src="/css/img/Logo-Comenac-2023-Version-Fondo-Blanco-Horizontal.png" alt="" class="logo"
          style="height: 1000%;">
        <br>
     {{>message}}
     <br>
     <br>
        <h4 style="color: aliceblue;">
          Cambio de contraseña</h4>
          <h3 style="color: aliceblue;">
          Ingrese el correo electrónico de su usuario</h3>
        <span class="error animated tada" id="msg"></span>
        <input type="text" name="email" placeholder="Correo electrónico" autocomplete="off">
        <input type="submit" value="Cambiar contraseña" class="btn1">
      </form>
    </div>

  </div>
  <!-- partial -->
  <script src='https://cldup.com/S6Ptkwu_qA.js'></script>
  
  {{!-- SCRIPTS PARTICLES --}}
  <script src="http://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script> <!-- stats.js lib -->
  <script src="http://threejs.org/examples/js/libs/stats.min.js"></script>

</body>

</html>


<script>
  particlesJS("particles-js", {
  particles: {
    number: { value: 160, density: { enable: true, value_area: 800 } },
    color: { value: "#eef2f7" },
    shape: {
      type: "circle",
      stroke: { width: 0, color: "#000000" },
      polygon: { nb_sides: 5 },
      image: { src: "img/github.svg", width: 100, height: 100 },
    },
    opacity: {
      value: 1,
      random: true,
      anim: { enable: true, speed: 1, opacity_min: 0, sync: false },
    },
    size: {
      value: 3,
      random: true,
      anim: { enable: false, speed: 4, size_min: 0.3, sync: false },
    },
    line_linked: {
      enable: false,
      distance: 150,
      color: "#ffffff",
      opacity: 0.4,
      width: 1,
    },
    move: {
      enable: true,
      speed: 1,
      direction: "none",
      random: true,
      straight: false,
      out_mode: "out",
      bounce: false,
      attract: { enable: false, rotateX: 600, rotateY: 600 },
    },
  },
  interactivity: {
    detect_on: "canvas",
    events: {
      onhover: { enable: false, mode: "bubble" },
      onclick: { enable: true, mode: "push" },
      resize: true,
    },
    modes: {
      grab: { distance: 400, line_linked: { opacity: 1 } },
      bubble: { distance: 250, size: 0, duration: 2, opacity: 0, speed: 3 },
      repulse: { distance: 400, duration: 0.4 },
      push: { particles_nb: 4 },
      remove: { particles_nb: 2 },
    },
  },
  retina_detect: true,
});
var count_particles, stats, update;
stats = new Stats();
stats.setMode(0);
stats.domElement.style.position = "absolute";
stats.domElement.style.left = "0px";
stats.domElement.style.top = "0px";
document.body.appendChild(stats.domElement);
count_particles = document.querySelector(".js-count-particles");
update = function () {
  stats.begin();
  stats.end();
  if (window.pJSDom[0].pJS.particles && window.pJSDom[0].pJS.particles.array) {
    count_particles.innerText = window.pJSDom[0].pJS.particles.array.length;
  }
  requestAnimationFrame(update);
};
requestAnimationFrame(update);
</script>